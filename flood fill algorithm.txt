class Pair
{
    int row;
    int col;
    Pair(int row,int col)
    {
        this.row=row;
        this.col=col;
    }
}
class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        int m=image.length;
        int n=image[0].length;
        int vis[][]=new int[m][n];
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                vis[i][j]=image[i][j];
            }
        }
        Queue<Pair>q=new LinkedList<>();
        int initial=image[sr][sc];
        vis[sr][sc]=color;
        q.add(new Pair(sr,sc));
        while(!q.isEmpty())
        {
            int r=q.peek().row;
            int c=q.peek().col;
            q.remove();
            int drow[]={-1,0,1,0};
            int dcol[]={0,1,0,-1};
            for(int i=0;i<4;i++)
            {
                int nrow=r+drow[i];
                int ncol=c+dcol[i];
                if(nrow>=0 && ncol>=0&&nrow<m&&ncol<n&&image[nrow][ncol]==initial&&vis[nrow][ncol]!=color)
                {
                    vis[nrow][ncol]=color;
                    q.add(new Pair(nrow,ncol));
                }
            }
        }
        return vis;
    }
}