/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> q=new LinkedList<>();
        List<List<Integer>>list=new LinkedList<>();
        if(root==null)
            return list;
        q.offer(root);
        int flag=0;
        while(!q.isEmpty()) 
        {
            List<Integer>sublist=new ArrayList<>();
            int level=q.size();
            
            for(int i=0;i<level;i++)
            {
            if(q.peek().left!=null)
            q.offer(q.peek().left);
            if(q.peek().right!=null)
            q.offer(q.peek().right);
            sublist.add(q.poll().val);
            
            }
        flag=flag+1;
        if(flag%2==0)
        {
         Collections.reverse(sublist);
         list.add(sublist);
        }
         else
         list.add(sublist);
        }
        return list;
    }
}